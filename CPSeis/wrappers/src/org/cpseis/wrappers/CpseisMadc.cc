//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisMadc.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define madc_wrap_create             madc_wrap_create_
#define madc_wrap_delete             madc_wrap_delete_
#define madc_wrap_update             madc_wrap_update_
#define madc_wrap_wrapup             madc_wrap_wrapup_
#define madc_wrap_oneset             madc_wrap_oneset_
#define madc_wrap_twosets            madc_wrap_twosets_
#elif NEED_CAPITALS
#define madc_wrap_create             MADC_WRAP_CREATE
#define madc_wrap_delete             MADC_WRAP_DELETE
#define madc_wrap_update             MADC_WRAP_UPDATE
#define madc_wrap_wrapup             MADC_WRAP_WRAPUP
#define madc_wrap_oneset             MADC_WRAP_ONESET
#define madc_wrap_twosets            MADC_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   madc_wrap_create;
    CpseisBase::ModuleDestroy  madc_wrap_delete;
    CpseisBase::ModuleUpdate   madc_wrap_update;
    CpseisBase::ModuleWrapup   madc_wrap_wrapup;
    CpseisBase::ModuleOneset   madc_wrap_oneset;
    CpseisBase::ModuleTwosets  madc_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisMadc::CpseisMadc() : CpseisBase ("MADC",
                                       madc_wrap_create,
                                       madc_wrap_delete,
                                       madc_wrap_update,
                                       madc_wrap_wrapup,
                                       madc_wrap_oneset,
                                       madc_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
