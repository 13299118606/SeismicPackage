//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisFill.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define fill_wrap_create             fill_wrap_create_
#define fill_wrap_delete             fill_wrap_delete_
#define fill_wrap_update             fill_wrap_update_
#define fill_wrap_wrapup             fill_wrap_wrapup_
#define fill_wrap_oneset             fill_wrap_oneset_
#define fill_wrap_twosets            fill_wrap_twosets_
#elif NEED_CAPITALS
#define fill_wrap_create             FILL_WRAP_CREATE
#define fill_wrap_delete             FILL_WRAP_DELETE
#define fill_wrap_update             FILL_WRAP_UPDATE
#define fill_wrap_wrapup             FILL_WRAP_WRAPUP
#define fill_wrap_oneset             FILL_WRAP_ONESET
#define fill_wrap_twosets            FILL_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   fill_wrap_create;
    CpseisBase::ModuleDestroy  fill_wrap_delete;
    CpseisBase::ModuleUpdate   fill_wrap_update;
    CpseisBase::ModuleWrapup   fill_wrap_wrapup;
    CpseisBase::ModuleOneset   fill_wrap_oneset;
    CpseisBase::ModuleTwosets  fill_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisFill::CpseisFill() : CpseisBase ("FILL",
                                       fill_wrap_create,
                                       fill_wrap_delete,
                                       fill_wrap_update,
                                       fill_wrap_wrapup,
                                       fill_wrap_oneset,
                                       fill_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
