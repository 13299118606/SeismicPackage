//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisFkap.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define fkap_wrap_create             fkap_wrap_create_
#define fkap_wrap_delete             fkap_wrap_delete_
#define fkap_wrap_update             fkap_wrap_update_
#define fkap_wrap_wrapup             fkap_wrap_wrapup_
#define fkap_wrap_oneset             fkap_wrap_oneset_
#define fkap_wrap_twosets            fkap_wrap_twosets_
#elif NEED_CAPITALS
#define fkap_wrap_create             FKAP_WRAP_CREATE
#define fkap_wrap_delete             FKAP_WRAP_DELETE
#define fkap_wrap_update             FKAP_WRAP_UPDATE
#define fkap_wrap_wrapup             FKAP_WRAP_WRAPUP
#define fkap_wrap_oneset             FKAP_WRAP_ONESET
#define fkap_wrap_twosets            FKAP_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   fkap_wrap_create;
    CpseisBase::ModuleDestroy  fkap_wrap_delete;
    CpseisBase::ModuleUpdate   fkap_wrap_update;
    CpseisBase::ModuleWrapup   fkap_wrap_wrapup;
    CpseisBase::ModuleOneset   fkap_wrap_oneset;
    CpseisBase::ModuleTwosets  fkap_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisFkap::CpseisFkap() : CpseisBase ("FKAP",
                                       fkap_wrap_create,
                                       fkap_wrap_delete,
                                       fkap_wrap_update,
                                       fkap_wrap_wrapup,
                                       fkap_wrap_oneset,
                                       fkap_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
