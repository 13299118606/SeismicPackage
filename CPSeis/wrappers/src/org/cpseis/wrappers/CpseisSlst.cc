//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisSlst.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define slst_wrap_create             slst_wrap_create_
#define slst_wrap_delete             slst_wrap_delete_
#define slst_wrap_update             slst_wrap_update_
#define slst_wrap_wrapup             slst_wrap_wrapup_
#define slst_wrap_oneset             slst_wrap_oneset_
#define slst_wrap_twosets            slst_wrap_twosets_
#elif NEED_CAPITALS
#define slst_wrap_create             SLST_WRAP_CREATE
#define slst_wrap_delete             SLST_WRAP_DELETE
#define slst_wrap_update             SLST_WRAP_UPDATE
#define slst_wrap_wrapup             SLST_WRAP_WRAPUP
#define slst_wrap_oneset             SLST_WRAP_ONESET
#define slst_wrap_twosets            SLST_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   slst_wrap_create;
    CpseisBase::ModuleDestroy  slst_wrap_delete;
    CpseisBase::ModuleUpdate   slst_wrap_update;
    CpseisBase::ModuleWrapup   slst_wrap_wrapup;
    CpseisBase::ModuleOneset   slst_wrap_oneset;
    CpseisBase::ModuleTwosets  slst_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisSlst::CpseisSlst() : CpseisBase ("SLST",
                                       slst_wrap_create,
                                       slst_wrap_delete,
                                       slst_wrap_update,
                                       slst_wrap_wrapup,
                                       slst_wrap_oneset,
                                       slst_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
