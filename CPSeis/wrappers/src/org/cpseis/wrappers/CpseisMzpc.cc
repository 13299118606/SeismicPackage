//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisMzpc.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define mzpc_wrap_create             mzpc_wrap_create_
#define mzpc_wrap_delete             mzpc_wrap_delete_
#define mzpc_wrap_update             mzpc_wrap_update_
#define mzpc_wrap_wrapup             mzpc_wrap_wrapup_
#define mzpc_wrap_oneset             mzpc_wrap_oneset_
#define mzpc_wrap_twosets            mzpc_wrap_twosets_
#elif NEED_CAPITALS
#define mzpc_wrap_create             MZPC_WRAP_CREATE
#define mzpc_wrap_delete             MZPC_WRAP_DELETE
#define mzpc_wrap_update             MZPC_WRAP_UPDATE
#define mzpc_wrap_wrapup             MZPC_WRAP_WRAPUP
#define mzpc_wrap_oneset             MZPC_WRAP_ONESET
#define mzpc_wrap_twosets            MZPC_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   mzpc_wrap_create;
    CpseisBase::ModuleDestroy  mzpc_wrap_delete;
    CpseisBase::ModuleUpdate   mzpc_wrap_update;
    CpseisBase::ModuleWrapup   mzpc_wrap_wrapup;
    CpseisBase::ModuleOneset   mzpc_wrap_oneset;
    CpseisBase::ModuleTwosets  mzpc_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisMzpc::CpseisMzpc() : CpseisBase ("MZPC",
                                       mzpc_wrap_create,
                                       mzpc_wrap_delete,
                                       mzpc_wrap_update,
                                       mzpc_wrap_wrapup,
                                       mzpc_wrap_oneset,
                                       mzpc_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
