//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisSdip.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define sdip_wrap_create             sdip_wrap_create_
#define sdip_wrap_delete             sdip_wrap_delete_
#define sdip_wrap_update             sdip_wrap_update_
#define sdip_wrap_wrapup             sdip_wrap_wrapup_
#define sdip_wrap_oneset             sdip_wrap_oneset_
#define sdip_wrap_twosets            sdip_wrap_twosets_
#elif NEED_CAPITALS
#define sdip_wrap_create             SDIP_WRAP_CREATE
#define sdip_wrap_delete             SDIP_WRAP_DELETE
#define sdip_wrap_update             SDIP_WRAP_UPDATE
#define sdip_wrap_wrapup             SDIP_WRAP_WRAPUP
#define sdip_wrap_oneset             SDIP_WRAP_ONESET
#define sdip_wrap_twosets            SDIP_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   sdip_wrap_create;
    CpseisBase::ModuleDestroy  sdip_wrap_delete;
    CpseisBase::ModuleUpdate   sdip_wrap_update;
    CpseisBase::ModuleWrapup   sdip_wrap_wrapup;
    CpseisBase::ModuleOneset   sdip_wrap_oneset;
    CpseisBase::ModuleTwosets  sdip_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisSdip::CpseisSdip() : CpseisBase ("SDIP",
                                       sdip_wrap_create,
                                       sdip_wrap_delete,
                                       sdip_wrap_update,
                                       sdip_wrap_wrapup,
                                       sdip_wrap_oneset,
                                       sdip_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
