//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisMvxp.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define mvxp_wrap_create             mvxp_wrap_create_
#define mvxp_wrap_delete             mvxp_wrap_delete_
#define mvxp_wrap_update             mvxp_wrap_update_
#define mvxp_wrap_wrapup             mvxp_wrap_wrapup_
#define mvxp_wrap_oneset             mvxp_wrap_oneset_
#define mvxp_wrap_twosets            mvxp_wrap_twosets_
#elif NEED_CAPITALS
#define mvxp_wrap_create             MVXP_WRAP_CREATE
#define mvxp_wrap_delete             MVXP_WRAP_DELETE
#define mvxp_wrap_update             MVXP_WRAP_UPDATE
#define mvxp_wrap_wrapup             MVXP_WRAP_WRAPUP
#define mvxp_wrap_oneset             MVXP_WRAP_ONESET
#define mvxp_wrap_twosets            MVXP_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   mvxp_wrap_create;
    CpseisBase::ModuleDestroy  mvxp_wrap_delete;
    CpseisBase::ModuleUpdate   mvxp_wrap_update;
    CpseisBase::ModuleWrapup   mvxp_wrap_wrapup;
    CpseisBase::ModuleOneset   mvxp_wrap_oneset;
    CpseisBase::ModuleTwosets  mvxp_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisMvxp::CpseisMvxp() : CpseisBase ("MVXP",
                                       mvxp_wrap_create,
                                       mvxp_wrap_delete,
                                       mvxp_wrap_update,
                                       mvxp_wrap_wrapup,
                                       mvxp_wrap_oneset,
                                       mvxp_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
