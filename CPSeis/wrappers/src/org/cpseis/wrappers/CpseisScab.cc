//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisScab.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define scab_wrap_create             scab_wrap_create_
#define scab_wrap_delete             scab_wrap_delete_
#define scab_wrap_update             scab_wrap_update_
#define scab_wrap_wrapup             scab_wrap_wrapup_
#define scab_wrap_oneset             scab_wrap_oneset_
#define scab_wrap_twosets            scab_wrap_twosets_
#elif NEED_CAPITALS
#define scab_wrap_create             SCAB_WRAP_CREATE
#define scab_wrap_delete             SCAB_WRAP_DELETE
#define scab_wrap_update             SCAB_WRAP_UPDATE
#define scab_wrap_wrapup             SCAB_WRAP_WRAPUP
#define scab_wrap_oneset             SCAB_WRAP_ONESET
#define scab_wrap_twosets            SCAB_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   scab_wrap_create;
    CpseisBase::ModuleDestroy  scab_wrap_delete;
    CpseisBase::ModuleUpdate   scab_wrap_update;
    CpseisBase::ModuleWrapup   scab_wrap_wrapup;
    CpseisBase::ModuleOneset   scab_wrap_oneset;
    CpseisBase::ModuleTwosets  scab_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisScab::CpseisScab() : CpseisBase ("SCAB",
                                       scab_wrap_create,
                                       scab_wrap_delete,
                                       scab_wrap_update,
                                       scab_wrap_wrapup,
                                       scab_wrap_oneset,
                                       scab_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
