//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisCtan.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define ctan_wrap_create             ctan_wrap_create_
#define ctan_wrap_delete             ctan_wrap_delete_
#define ctan_wrap_update             ctan_wrap_update_
#define ctan_wrap_wrapup             ctan_wrap_wrapup_
#define ctan_wrap_oneset             ctan_wrap_oneset_
#define ctan_wrap_twosets            ctan_wrap_twosets_
#elif NEED_CAPITALS
#define ctan_wrap_create             CTAN_WRAP_CREATE
#define ctan_wrap_delete             CTAN_WRAP_DELETE
#define ctan_wrap_update             CTAN_WRAP_UPDATE
#define ctan_wrap_wrapup             CTAN_WRAP_WRAPUP
#define ctan_wrap_oneset             CTAN_WRAP_ONESET
#define ctan_wrap_twosets            CTAN_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   ctan_wrap_create;
    CpseisBase::ModuleDestroy  ctan_wrap_delete;
    CpseisBase::ModuleUpdate   ctan_wrap_update;
    CpseisBase::ModuleWrapup   ctan_wrap_wrapup;
    CpseisBase::ModuleOneset   ctan_wrap_oneset;
    CpseisBase::ModuleTwosets  ctan_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisCtan::CpseisCtan() : CpseisBase ("CTAN",
                                       ctan_wrap_create,
                                       ctan_wrap_delete,
                                       ctan_wrap_update,
                                       ctan_wrap_wrapup,
                                       ctan_wrap_oneset,
                                       ctan_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
