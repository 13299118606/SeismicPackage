//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisSpti.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define spti_wrap_create             spti_wrap_create_
#define spti_wrap_delete             spti_wrap_delete_
#define spti_wrap_update             spti_wrap_update_
#define spti_wrap_wrapup             spti_wrap_wrapup_
#define spti_wrap_oneset             spti_wrap_oneset_
#define spti_wrap_twosets            spti_wrap_twosets_
#elif NEED_CAPITALS
#define spti_wrap_create             SPTI_WRAP_CREATE
#define spti_wrap_delete             SPTI_WRAP_DELETE
#define spti_wrap_update             SPTI_WRAP_UPDATE
#define spti_wrap_wrapup             SPTI_WRAP_WRAPUP
#define spti_wrap_oneset             SPTI_WRAP_ONESET
#define spti_wrap_twosets            SPTI_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   spti_wrap_create;
    CpseisBase::ModuleDestroy  spti_wrap_delete;
    CpseisBase::ModuleUpdate   spti_wrap_update;
    CpseisBase::ModuleWrapup   spti_wrap_wrapup;
    CpseisBase::ModuleOneset   spti_wrap_oneset;
    CpseisBase::ModuleTwosets  spti_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisSpti::CpseisSpti() : CpseisBase ("SPTI",
                                       spti_wrap_create,
                                       spti_wrap_delete,
                                       spti_wrap_update,
                                       spti_wrap_wrapup,
                                       spti_wrap_oneset,
                                       spti_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
