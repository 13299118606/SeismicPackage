//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisEda.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define eda_wrap_create             eda_wrap_create_
#define eda_wrap_delete             eda_wrap_delete_
#define eda_wrap_update             eda_wrap_update_
#define eda_wrap_wrapup             eda_wrap_wrapup_
#define eda_wrap_oneset             eda_wrap_oneset_
#define eda_wrap_twosets            eda_wrap_twosets_
#elif NEED_CAPITALS
#define eda_wrap_create             EDA_WRAP_CREATE
#define eda_wrap_delete             EDA_WRAP_DELETE
#define eda_wrap_update             EDA_WRAP_UPDATE
#define eda_wrap_wrapup             EDA_WRAP_WRAPUP
#define eda_wrap_oneset             EDA_WRAP_ONESET
#define eda_wrap_twosets            EDA_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   eda_wrap_create;
    CpseisBase::ModuleDestroy  eda_wrap_delete;
    CpseisBase::ModuleUpdate   eda_wrap_update;
    CpseisBase::ModuleWrapup   eda_wrap_wrapup;
    CpseisBase::ModuleOneset   eda_wrap_oneset;
    CpseisBase::ModuleTwosets  eda_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisEda::CpseisEda() : CpseisBase ("EDA",
                                       eda_wrap_create,
                                       eda_wrap_delete,
                                       eda_wrap_update,
                                       eda_wrap_wrapup,
                                       eda_wrap_oneset,
                                       eda_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
