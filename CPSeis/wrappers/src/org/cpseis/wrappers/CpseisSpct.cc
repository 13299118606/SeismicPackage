//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisSpct.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define spct_wrap_create             spct_wrap_create_
#define spct_wrap_delete             spct_wrap_delete_
#define spct_wrap_update             spct_wrap_update_
#define spct_wrap_wrapup             spct_wrap_wrapup_
#define spct_wrap_oneset             spct_wrap_oneset_
#define spct_wrap_twosets            spct_wrap_twosets_
#elif NEED_CAPITALS
#define spct_wrap_create             SPCT_WRAP_CREATE
#define spct_wrap_delete             SPCT_WRAP_DELETE
#define spct_wrap_update             SPCT_WRAP_UPDATE
#define spct_wrap_wrapup             SPCT_WRAP_WRAPUP
#define spct_wrap_oneset             SPCT_WRAP_ONESET
#define spct_wrap_twosets            SPCT_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   spct_wrap_create;
    CpseisBase::ModuleDestroy  spct_wrap_delete;
    CpseisBase::ModuleUpdate   spct_wrap_update;
    CpseisBase::ModuleWrapup   spct_wrap_wrapup;
    CpseisBase::ModuleOneset   spct_wrap_oneset;
    CpseisBase::ModuleTwosets  spct_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisSpct::CpseisSpct() : CpseisBase ("SPCT",
                                       spct_wrap_create,
                                       spct_wrap_delete,
                                       spct_wrap_update,
                                       spct_wrap_wrapup,
                                       spct_wrap_oneset,
                                       spct_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
