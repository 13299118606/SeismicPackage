//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisDist.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define dist_wrap_create             dist_wrap_create_
#define dist_wrap_delete             dist_wrap_delete_
#define dist_wrap_update             dist_wrap_update_
#define dist_wrap_wrapup             dist_wrap_wrapup_
#define dist_wrap_oneset             dist_wrap_oneset_
#define dist_wrap_twosets            dist_wrap_twosets_
#elif NEED_CAPITALS
#define dist_wrap_create             DIST_WRAP_CREATE
#define dist_wrap_delete             DIST_WRAP_DELETE
#define dist_wrap_update             DIST_WRAP_UPDATE
#define dist_wrap_wrapup             DIST_WRAP_WRAPUP
#define dist_wrap_oneset             DIST_WRAP_ONESET
#define dist_wrap_twosets            DIST_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   dist_wrap_create;
    CpseisBase::ModuleDestroy  dist_wrap_delete;
    CpseisBase::ModuleUpdate   dist_wrap_update;
    CpseisBase::ModuleWrapup   dist_wrap_wrapup;
    CpseisBase::ModuleOneset   dist_wrap_oneset;
    CpseisBase::ModuleTwosets  dist_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisDist::CpseisDist() : CpseisBase ("DIST",
                                       dist_wrap_create,
                                       dist_wrap_delete,
                                       dist_wrap_update,
                                       dist_wrap_wrapup,
                                       dist_wrap_oneset,
                                       dist_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
