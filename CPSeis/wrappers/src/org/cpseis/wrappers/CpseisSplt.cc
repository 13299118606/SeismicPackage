//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisSplt.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define splt_wrap_create             splt_wrap_create_
#define splt_wrap_delete             splt_wrap_delete_
#define splt_wrap_update             splt_wrap_update_
#define splt_wrap_wrapup             splt_wrap_wrapup_
#define splt_wrap_oneset             splt_wrap_oneset_
#define splt_wrap_twosets            splt_wrap_twosets_
#elif NEED_CAPITALS
#define splt_wrap_create             SPLT_WRAP_CREATE
#define splt_wrap_delete             SPLT_WRAP_DELETE
#define splt_wrap_update             SPLT_WRAP_UPDATE
#define splt_wrap_wrapup             SPLT_WRAP_WRAPUP
#define splt_wrap_oneset             SPLT_WRAP_ONESET
#define splt_wrap_twosets            SPLT_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   splt_wrap_create;
    CpseisBase::ModuleDestroy  splt_wrap_delete;
    CpseisBase::ModuleUpdate   splt_wrap_update;
    CpseisBase::ModuleWrapup   splt_wrap_wrapup;
    CpseisBase::ModuleOneset   splt_wrap_oneset;
    CpseisBase::ModuleTwosets  splt_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisSplt::CpseisSplt() : CpseisBase ("SPLT",
                                       splt_wrap_create,
                                       splt_wrap_delete,
                                       splt_wrap_update,
                                       splt_wrap_wrapup,
                                       splt_wrap_oneset,
                                       splt_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
