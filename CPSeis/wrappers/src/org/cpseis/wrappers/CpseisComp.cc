//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisComp.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define comp_wrap_create             comp_wrap_create_
#define comp_wrap_delete             comp_wrap_delete_
#define comp_wrap_update             comp_wrap_update_
#define comp_wrap_wrapup             comp_wrap_wrapup_
#define comp_wrap_oneset             comp_wrap_oneset_
#define comp_wrap_twosets            comp_wrap_twosets_
#elif NEED_CAPITALS
#define comp_wrap_create             COMP_WRAP_CREATE
#define comp_wrap_delete             COMP_WRAP_DELETE
#define comp_wrap_update             COMP_WRAP_UPDATE
#define comp_wrap_wrapup             COMP_WRAP_WRAPUP
#define comp_wrap_oneset             COMP_WRAP_ONESET
#define comp_wrap_twosets            COMP_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   comp_wrap_create;
    CpseisBase::ModuleDestroy  comp_wrap_delete;
    CpseisBase::ModuleUpdate   comp_wrap_update;
    CpseisBase::ModuleWrapup   comp_wrap_wrapup;
    CpseisBase::ModuleOneset   comp_wrap_oneset;
    CpseisBase::ModuleTwosets  comp_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisComp::CpseisComp() : CpseisBase ("COMP",
                                       comp_wrap_create,
                                       comp_wrap_delete,
                                       comp_wrap_update,
                                       comp_wrap_wrapup,
                                       comp_wrap_oneset,
                                       comp_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
