//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisUtel.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define utel_wrap_create             utel_wrap_create_
#define utel_wrap_delete             utel_wrap_delete_
#define utel_wrap_update             utel_wrap_update_
#define utel_wrap_wrapup             utel_wrap_wrapup_
#define utel_wrap_oneset             utel_wrap_oneset_
#define utel_wrap_twosets            utel_wrap_twosets_
#elif NEED_CAPITALS
#define utel_wrap_create             UTEL_WRAP_CREATE
#define utel_wrap_delete             UTEL_WRAP_DELETE
#define utel_wrap_update             UTEL_WRAP_UPDATE
#define utel_wrap_wrapup             UTEL_WRAP_WRAPUP
#define utel_wrap_oneset             UTEL_WRAP_ONESET
#define utel_wrap_twosets            UTEL_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   utel_wrap_create;
    CpseisBase::ModuleDestroy  utel_wrap_delete;
    CpseisBase::ModuleUpdate   utel_wrap_update;
    CpseisBase::ModuleWrapup   utel_wrap_wrapup;
    CpseisBase::ModuleOneset   utel_wrap_oneset;
    CpseisBase::ModuleTwosets  utel_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisUtel::CpseisUtel() : CpseisBase ("UTEL",
                                       utel_wrap_create,
                                       utel_wrap_delete,
                                       utel_wrap_update,
                                       utel_wrap_wrapup,
                                       utel_wrap_oneset,
                                       utel_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
