//////// DO NOT EDIT THIS FILE - it is machine generated ////////

#include "CpseisXxxx.hh"

//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//
//------------------ fortran spelling adjustments --------------------//

#if NEED_UNDERSCORE
#define xxxx_wrap_create             xxxx_wrap_create_
#define xxxx_wrap_delete             xxxx_wrap_delete_
#define xxxx_wrap_update             xxxx_wrap_update_
#define xxxx_wrap_wrapup             xxxx_wrap_wrapup_
#define xxxx_wrap_oneset             xxxx_wrap_oneset_
#define xxxx_wrap_twosets            xxxx_wrap_twosets_
#elif NEED_CAPITALS
#define xxxx_wrap_create             XXXX_WRAP_CREATE
#define xxxx_wrap_delete             XXXX_WRAP_DELETE
#define xxxx_wrap_update             XXXX_WRAP_UPDATE
#define xxxx_wrap_wrapup             XXXX_WRAP_WRAPUP
#define xxxx_wrap_oneset             XXXX_WRAP_ONESET
#define xxxx_wrap_twosets            XXXX_WRAP_TWOSETS
#endif

//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//
//----------------------- fortran prototypes -------------------------//

extern "C"
    {
    CpseisBase::ModuleCreate   xxxx_wrap_create;
    CpseisBase::ModuleDestroy  xxxx_wrap_delete;
    CpseisBase::ModuleUpdate   xxxx_wrap_update;
    CpseisBase::ModuleWrapup   xxxx_wrap_wrapup;
    CpseisBase::ModuleOneset   xxxx_wrap_oneset;
    CpseisBase::ModuleTwosets  xxxx_wrap_twosets;
    }

//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//
//------------------------ constructor -------------------------------//

CpseisXxxx::CpseisXxxx() : CpseisBase ("XXXX",
                                       xxxx_wrap_create,
                                       xxxx_wrap_delete,
                                       xxxx_wrap_update,
                                       xxxx_wrap_wrapup,
                                       xxxx_wrap_oneset,
                                       xxxx_wrap_twosets) {}

//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
//------------------------------ end ---------------------------------//
